// Mocks generated by Mockito 5.4.2 from annotations
// in currency_converter_demo/test/features/currencies/data/datasources/countries_local_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:currency_converter_demo/features/countries/data/datasources/local/hive/countries_hive_data_source.dart'
    as _i2;
import 'package:currency_converter_demo/features/countries/data/models/country_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CountriesHiveDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCountriesHiveDataSource extends _i1.Mock
    implements _i2.CountriesHiveDataSource {
  @override
  _i3.Future<bool> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<void> add(_i4.CountryModel? obj) => (super.noSuchMethod(
        Invocation.method(
          #add,
          [obj],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> delete(_i4.CountryModel? obj) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [obj],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> deleteAll() => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<List<_i4.CountryModel>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.CountryModel>>.value(<_i4.CountryModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.CountryModel>>.value(<_i4.CountryModel>[]),
      ) as _i3.Future<List<_i4.CountryModel>>);
  @override
  int count() => (super.noSuchMethod(
        Invocation.method(
          #count,
          [],
        ),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
}
